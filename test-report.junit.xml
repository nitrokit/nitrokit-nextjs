<?xml version="1.0" encoding="UTF-8" ?>
<testsuites name="vitest tests" tests="119" failures="0" errors="0" time="7.665672355">
    <testsuite name="src/components/ui/__tests__/accordion.test.tsx" timestamp="2025-09-23T00:38:26.376Z" hostname="MacBookPro.Workgroup" tests="5" failures="0" errors="0" skipped="0" time="1.208258053">
        <testcase classname="src/components/ui/__tests__/accordion.test.tsx" name="Accordion &gt; renders accordion items" time="0.38456554">
        </testcase>
        <testcase classname="src/components/ui/__tests__/accordion.test.tsx" name="Accordion &gt; expands and collapses accordion items" time="0.343948743">
        </testcase>
        <testcase classname="src/components/ui/__tests__/accordion.test.tsx" name="Accordion &gt; handles multiple accordion items" time="0.350852082">
        </testcase>
        <testcase classname="src/components/ui/__tests__/accordion.test.tsx" name="Accordion &gt; applies custom className to accordion item" time="0.033377707">
        </testcase>
        <testcase classname="src/components/ui/__tests__/accordion.test.tsx" name="Accordion &gt; handles disabled accordion item" time="0.092040597">
        </testcase>
    </testsuite>
    <testsuite name="src/components/ui/__tests__/alert.test.tsx" timestamp="2025-09-23T00:38:26.379Z" hostname="MacBookPro.Workgroup" tests="3" failures="0" errors="0" skipped="0" time="0.091016588">
        <testcase classname="src/components/ui/__tests__/alert.test.tsx" name="Alert &gt; renders alert with different variants" time="0.077963995">
        </testcase>
        <testcase classname="src/components/ui/__tests__/alert.test.tsx" name="Alert &gt; renders alert with different text content" time="0.004817718">
        </testcase>
        <testcase classname="src/components/ui/__tests__/alert.test.tsx" name="Alert &gt; applies custom className" time="0.005083135">
        </testcase>
    </testsuite>
    <testsuite name="src/components/ui/__tests__/avatar.test.tsx" timestamp="2025-09-23T00:38:26.380Z" hostname="MacBookPro.Workgroup" tests="2" failures="0" errors="0" skipped="0" time="0.089709578">
        <testcase classname="src/components/ui/__tests__/avatar.test.tsx" name="Avatar &gt; Avatar bileşeni ve fallback render ediliyor" time="0.081522976">
        </testcase>
        <testcase classname="src/components/ui/__tests__/avatar.test.tsx" name="Avatar &gt; AvatarFallback içeriği doğru gösteriliyor" time="0.005097208">
        </testcase>
    </testsuite>
    <testsuite name="src/components/ui/__tests__/breadcrumb.test.tsx" timestamp="2025-09-23T00:38:26.381Z" hostname="MacBookPro.Workgroup" tests="4" failures="0" errors="0" skipped="0" time="0.596425929">
        <testcase classname="src/components/ui/__tests__/breadcrumb.test.tsx" name="Breadcrumb &gt; renders breadcrumb with items" time="0.262959849">
        </testcase>
        <testcase classname="src/components/ui/__tests__/breadcrumb.test.tsx" name="Breadcrumb &gt; renders breadcrumb links with correct hrefs" time="0.2418519">
        </testcase>
        <testcase classname="src/components/ui/__tests__/breadcrumb.test.tsx" name="Breadcrumb &gt; applies custom className to breadcrumb list" time="0.079272608">
        </testcase>
        <testcase classname="src/components/ui/__tests__/breadcrumb.test.tsx" name="Breadcrumb &gt; renders breadcrumb with custom separator" time="0.009014498">
        </testcase>
    </testsuite>
    <testsuite name="src/components/ui/__tests__/button.test.tsx" timestamp="2025-09-23T00:38:26.382Z" hostname="MacBookPro.Workgroup" tests="7" failures="0" errors="0" skipped="0" time="0.919274236">
        <testcase classname="src/components/ui/__tests__/button.test.tsx" name="Button &gt; renders button with default props" time="0.252937825">
        </testcase>
        <testcase classname="src/components/ui/__tests__/button.test.tsx" name="Button &gt; renders button with different variants" time="0.259232472">
        </testcase>
        <testcase classname="src/components/ui/__tests__/button.test.tsx" name="Button &gt; renders button with different sizes" time="0.162552774">
        </testcase>
        <testcase classname="src/components/ui/__tests__/button.test.tsx" name="Button &gt; applies custom className" time="0.046275095">
        </testcase>
        <testcase classname="src/components/ui/__tests__/button.test.tsx" name="Button &gt; handles disabled state" time="0.034433955">
        </testcase>
        <testcase classname="src/components/ui/__tests__/button.test.tsx" name="Button &gt; handles click events" time="0.099245064">
        </testcase>
        <testcase classname="src/components/ui/__tests__/button.test.tsx" name="Button &gt; handles asChild prop" time="0.061398597">
        </testcase>
    </testsuite>
    <testsuite name="src/components/ui/__tests__/card.test.tsx" timestamp="2025-09-23T00:38:26.384Z" hostname="MacBookPro.Workgroup" tests="3" failures="0" errors="0" skipped="0" time="0.099932527">
        <testcase classname="src/components/ui/__tests__/card.test.tsx" name="Card &gt; renders card with all subcomponents" time="0.087312466">
        </testcase>
        <testcase classname="src/components/ui/__tests__/card.test.tsx" name="Card &gt; applies custom className to card" time="0.006218725">
        </testcase>
        <testcase classname="src/components/ui/__tests__/card.test.tsx" name="Card &gt; renders card with only required components" time="0.003169842">
        </testcase>
    </testsuite>
    <testsuite name="src/components/ui/__tests__/checkbox.test.tsx" timestamp="2025-09-23T00:38:26.384Z" hostname="MacBookPro.Workgroup" tests="5" failures="0" errors="0" skipped="0" time="0.775616055">
        <testcase classname="src/components/ui/__tests__/checkbox.test.tsx" name="Checkbox &gt; renders checkbox" time="0.332622927">
        </testcase>
        <testcase classname="src/components/ui/__tests__/checkbox.test.tsx" name="Checkbox &gt; handles checked state" time="0.203972982">
        </testcase>
        <testcase classname="src/components/ui/__tests__/checkbox.test.tsx" name="Checkbox &gt; handles disabled state" time="0.077615637">
        </testcase>
        <testcase classname="src/components/ui/__tests__/checkbox.test.tsx" name="Checkbox &gt; applies custom className" time="0.048753451">
        </testcase>
        <testcase classname="src/components/ui/__tests__/checkbox.test.tsx" name="Checkbox &gt; handles onChange event" time="0.109515677">
        </testcase>
    </testsuite>
    <testsuite name="src/components/ui/__tests__/input.test.tsx" timestamp="2025-09-23T00:38:26.386Z" hostname="MacBookPro.Workgroup" tests="3" failures="0" errors="0" skipped="0" time="0.350839343">
        <testcase classname="src/components/ui/__tests__/input.test.tsx" name="Input &gt; renders input" time="0.106376602">
        </testcase>
        <testcase classname="src/components/ui/__tests__/input.test.tsx" name="Input &gt; applies custom className" time="0.196564425">
        </testcase>
        <testcase classname="src/components/ui/__tests__/input.test.tsx" name="Input &gt; handles disabled prop" time="0.043575144">
        </testcase>
    </testsuite>
    <testsuite name="src/components/ui/__tests__/label.test.tsx" timestamp="2025-09-23T00:38:26.386Z" hostname="MacBookPro.Workgroup" tests="2" failures="0" errors="0" skipped="0" time="0.045932056">
        <testcase classname="src/components/ui/__tests__/label.test.tsx" name="Label &gt; renders label" time="0.040700448">
        </testcase>
        <testcase classname="src/components/ui/__tests__/label.test.tsx" name="Label &gt; applies custom className" time="0.003247172">
        </testcase>
    </testsuite>
    <testsuite name="src/components/ui/__tests__/navigation-menu.test.tsx" timestamp="2025-09-23T00:38:26.387Z" hostname="MacBookPro.Workgroup" tests="3" failures="0" errors="0" skipped="0" time="0.934058448">
        <testcase classname="src/components/ui/__tests__/navigation-menu.test.tsx" name="NavigationMenu &gt; renders navigation menu with items" time="0.469256693">
        </testcase>
        <testcase classname="src/components/ui/__tests__/navigation-menu.test.tsx" name="NavigationMenu &gt; renders navigation menu with trigger and content" time="0.38657731">
        </testcase>
        <testcase classname="src/components/ui/__tests__/navigation-menu.test.tsx" name="NavigationMenu &gt; applies custom className to navigation menu link" time="0.075066999">
        </testcase>
    </testsuite>
    <testsuite name="src/components/ui/__tests__/scroll-area.test.tsx" timestamp="2025-09-23T00:38:26.388Z" hostname="MacBookPro.Workgroup" tests="4" failures="0" errors="0" skipped="0" time="0.386269138">
        <testcase classname="src/components/ui/__tests__/scroll-area.test.tsx" name="ScrollArea &gt; renders scroll area" time="0.161733556">
        </testcase>
        <testcase classname="src/components/ui/__tests__/scroll-area.test.tsx" name="ScrollArea &gt; applies custom className" time="0.025730281">
        </testcase>
        <testcase classname="src/components/ui/__tests__/scroll-area.test.tsx" name="ScrollArea &gt; renders scroll area with different orientations" time="0.01568521">
        </testcase>
        <testcase classname="src/components/ui/__tests__/scroll-area.test.tsx" name="ScrollArea &gt; renders scroll area with different types" time="0.179318215">
        </testcase>
    </testsuite>
    <testsuite name="src/components/ui/__tests__/select.test.tsx" timestamp="2025-09-23T00:38:26.388Z" hostname="MacBookPro.Workgroup" tests="3" failures="0" errors="0" skipped="0" time="0.627863034">
        <testcase classname="src/components/ui/__tests__/select.test.tsx" name="Select &gt; renders select" time="0.464008784">
        </testcase>
        <testcase classname="src/components/ui/__tests__/select.test.tsx" name="Select &gt; applies custom className" time="0.087179224">
        </testcase>
        <testcase classname="src/components/ui/__tests__/select.test.tsx" name="Select &gt; handles disabled state" time="0.073315485">
        </testcase>
    </testsuite>
    <testsuite name="src/components/ui/__tests__/skeleton.test.tsx" timestamp="2025-09-23T00:38:26.389Z" hostname="MacBookPro.Workgroup" tests="2" failures="0" errors="0" skipped="0" time="0.045745251">
        <testcase classname="src/components/ui/__tests__/skeleton.test.tsx" name="Skeleton &gt; renders skeleton" time="0.039503487">
        </testcase>
        <testcase classname="src/components/ui/__tests__/skeleton.test.tsx" name="Skeleton &gt; applies custom className" time="0.003697263">
        </testcase>
    </testsuite>
    <testsuite name="src/components/ui/__tests__/switch.test.tsx" timestamp="2025-09-23T00:38:26.389Z" hostname="MacBookPro.Workgroup" tests="6" failures="0" errors="0" skipped="0" time="0.684823991">
        <testcase classname="src/components/ui/__tests__/switch.test.tsx" name="Switch &gt; renders switch" time="0.269161775">
        </testcase>
        <testcase classname="src/components/ui/__tests__/switch.test.tsx" name="Switch &gt; handles checked state" time="0.102085709">
        </testcase>
        <testcase classname="src/components/ui/__tests__/switch.test.tsx" name="Switch &gt; handles disabled state" time="0.084529557">
        </testcase>
        <testcase classname="src/components/ui/__tests__/switch.test.tsx" name="Switch &gt; applies custom className" time="0.066128168">
        </testcase>
        <testcase classname="src/components/ui/__tests__/switch.test.tsx" name="Switch &gt; handles onChange event" time="0.093423483">
        </testcase>
        <testcase classname="src/components/ui/__tests__/switch.test.tsx" name="Switch &gt; handles default checked state" time="0.065299483">
        </testcase>
    </testsuite>
    <testsuite name="src/components/ui/__tests__/textarea.test.tsx" timestamp="2025-09-23T00:38:26.390Z" hostname="MacBookPro.Workgroup" tests="3" failures="0" errors="0" skipped="0" time="0.327453441">
        <testcase classname="src/components/ui/__tests__/textarea.test.tsx" name="Textarea &gt; renders textarea" time="0.084056353">
        </testcase>
        <testcase classname="src/components/ui/__tests__/textarea.test.tsx" name="Textarea &gt; applies custom className" time="0.200534275">
        </testcase>
        <testcase classname="src/components/ui/__tests__/textarea.test.tsx" name="Textarea &gt; handles disabled prop" time="0.039582849">
        </testcase>
    </testsuite>
    <testsuite name="src/lib/utils/__tests__/cn.test.ts" timestamp="2025-09-23T00:38:26.391Z" hostname="MacBookPro.Workgroup" tests="23" failures="0" errors="0" skipped="0" time="0.027434331">
        <testcase classname="src/lib/utils/__tests__/cn.test.ts" name="cn utility function &gt; Basic functionality &gt; should merge single class string" time="0.008373513">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/cn.test.ts" name="cn utility function &gt; Basic functionality &gt; should merge multiple class strings" time="0.000471929">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/cn.test.ts" name="cn utility function &gt; Basic functionality &gt; should handle empty inputs" time="0.000320839">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/cn.test.ts" name="cn utility function &gt; Basic functionality &gt; should handle undefined and null values" time="0.000209026">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/cn.test.ts" name="cn utility function &gt; Conditional classes &gt; should handle boolean conditions" time="0.00025738">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/cn.test.ts" name="cn utility function &gt; Conditional classes &gt; should handle object notation" time="0.000222035">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/cn.test.ts" name="cn utility function &gt; Conditional classes &gt; should handle mixed input types" time="0.000175222">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/cn.test.ts" name="cn utility function &gt; Tailwind CSS class merging &gt; should merge conflicting Tailwind classes correctly" time="0.000232745">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/cn.test.ts" name="cn utility function &gt; Tailwind CSS class merging &gt; should handle responsive variants" time="0.000223749">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/cn.test.ts" name="cn utility function &gt; Tailwind CSS class merging &gt; should handle state variants" time="0.000153953">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/cn.test.ts" name="cn utility function &gt; Tailwind CSS class merging &gt; should merge complex conflicting classes" time="0.000142969">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/cn.test.ts" name="cn utility function &gt; Edge cases &gt; should handle very long class strings" time="0.000504241">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/cn.test.ts" name="cn utility function &gt; Edge cases &gt; should handle special characters in class names" time="0.000270057">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/cn.test.ts" name="cn utility function &gt; Edge cases &gt; should handle custom class names mixed with Tailwind" time="0.00016781">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/cn.test.ts" name="cn utility function &gt; Edge cases &gt; should deduplicate identical classes" time="0.0001439">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/cn.test.ts" name="cn utility function &gt; Edge cases &gt; should handle whitespace normalization" time="0.000141134">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/cn.test.ts" name="cn utility function &gt; Real-world usage scenarios &gt; should handle button variant combinations" time="0.00017963">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/cn.test.ts" name="cn utility function &gt; Real-world usage scenarios &gt; should handle component size variations" time="0.000212922">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/cn.test.ts" name="cn utility function &gt; Real-world usage scenarios &gt; should handle conditional disabled state" time="0.000168697">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/cn.test.ts" name="cn utility function &gt; Real-world usage scenarios &gt; should handle form input states" time="0.000213012">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/cn.test.ts" name="cn utility function &gt; Performance considerations &gt; should handle many class combinations efficiently" time="0.010301296">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/cn.test.ts" name="cn utility function &gt; Performance considerations &gt; should return consistent results for same inputs" time="0.000225819">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/cn.test.ts" name="cn utility function &gt; Type safety &gt; should accept various ClassValue types" time="0.001638856">
        </testcase>
    </testsuite>
    <testsuite name="src/lib/utils/__tests__/error-handler.test.ts" timestamp="2025-09-23T00:38:26.394Z" hostname="MacBookPro.Workgroup" tests="41" failures="0" errors="0" skipped="0" time="0.455020356">
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; normalizeError &gt; should return Error instance unchanged" time="0.002668341">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; normalizeError &gt; should convert string to Error instance" time="0.000742178">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; normalizeError &gt; should convert object with message property to Error" time="0.00044107">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; normalizeError &gt; should handle object with non-string message" time="0.000347255">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; normalizeError &gt; should handle object with null message" time="0.000311563">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; normalizeError &gt; should handle object with undefined message" time="0.000324977">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; normalizeError &gt; should return default error for null" time="0.000298111">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; normalizeError &gt; should return default error for undefined" time="0.000445573">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; normalizeError &gt; should return default error for number" time="0.000363222">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; normalizeError &gt; should return default error for boolean" time="0.000330427">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; normalizeError &gt; should return default error for array" time="0.000407556">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; normalizeError &gt; should return default error for function" time="0.000383058">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; normalizeError &gt; should handle object without message property" time="0.000365747">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; normalizeError &gt; should handle empty string" time="0.000325215">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; normalizeError &gt; should handle empty object" time="0.000411511">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; getErrorMessage &gt; should return message from Error instance" time="0.000347709">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; getErrorMessage &gt; should return string error directly" time="0.000258956">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; getErrorMessage &gt; should return message from object with message property" time="0.00025191">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; getErrorMessage &gt; should return default message for unknown error types" time="0.00026318">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; getErrorMessage &gt; should handle null input" time="0.000345234">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; getErrorMessage &gt; should handle undefined input" time="0.000264099">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; getErrorMessage &gt; should handle empty string" time="0.000307723">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; getErrorMessage &gt; should handle complex object with message" time="0.000360823">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; getErrorStack &gt; should return stack from Error instance" time="0.010480084">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; getErrorStack &gt; should return undefined for string error (no stack)" time="0.001082388">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; getErrorStack &gt; should return stack for object converted to Error" time="0.000634359">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; getErrorStack &gt; should handle null input" time="0.000572985">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; getErrorStack &gt; should handle undefined input" time="0.000548941">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; getErrorStack &gt; should preserve original stack trace when possible" time="0.000629173">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; Edge cases and integration &gt; should handle Error subclasses correctly" time="0.000819315">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; Edge cases and integration &gt; should handle TypeError" time="0.000375498">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; Edge cases and integration &gt; should handle RangeError" time="0.000356253">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; Edge cases and integration &gt; should handle nested error objects" time="0.000292691">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; Edge cases and integration &gt; should handle circular references safely" time="0.001989365">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; Edge cases and integration &gt; should handle very long error messages" time="0.000547369">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; Edge cases and integration &gt; should handle unicode characters in error messages" time="0.000187617">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; Edge cases and integration &gt; should handle error-like objects from different contexts" time="0.000202592">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; Performance considerations &gt; should handle many error normalizations efficiently" time="0.262701082">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; Performance considerations &gt; should not leak memory with repeated calls" time="0.157517162">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; Type guard behavior &gt; should work as type guard for Error instances" time="0.000426657">
        </testcase>
        <testcase classname="src/lib/utils/__tests__/error-handler.test.ts" name="Error Handler Utils &gt; Type guard behavior &gt; should ensure consistent return type" time="0.00118322">
        </testcase>
    </testsuite>
</testsuites>
