name: 'Create Release on Tag'

on:
  push:
    tags:
      - 'v*.*.*'  # Matches v1.0.0, v2.1.3, etc.
      - 'v*.*.*-*'  # Matches v1.0.0-beta.1, v1.0.0-rc.1, etc.

permissions:
  contents: write
  pull-requests: read

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for changelog generation

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: true

      - name: Generate release notes
        id: release-notes
        run: |
          chmod +x ./scripts/generate-release-notes.sh
          ./scripts/generate-release-notes.sh "${{ github.ref_name }}" > release-notes.md
          echo "release_notes<<EOF" >> $GITHUB_OUTPUT
          cat release-notes.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Determine if pre-release
        id: prerelease
        run: |
          if [[ "${{ github.ref_name }}" =~ -[a-zA-Z] ]]; then
            echo "is_prerelease=true" >> $GITHUB_OUTPUT
          else
            echo "is_prerelease=false" >> $GITHUB_OUTPUT
          fi

      - name: Build project
        run: |
          pnpm build
          pnpm test

      - name: Create build archive
        run: |
          # Zip Next.js Build Output
          if [ -d ".next" ]; then
            zip -r nitrokit-${{ github.ref_name }}.zip .next
          elif [ -d "out" ]; then
            zip -r nitrokit-${{ github.ref_name }}.zip out
          else
            echo "No build output found, creating empty archive"
            touch empty.txt
            zip nitrokit-${{ github.ref_name }}.zip empty.txt
          fi

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: 'Release ${{ github.ref_name }}'
          body: ${{ steps.release-notes.outputs.release_notes }}
          draft: false
          prerelease: ${{ steps.prerelease.outputs.is_prerelease }}
          files: |
            nitrokit-${{ github.ref_name }}.zip
          token: ${{ secrets.GITHUB_TOKEN }}