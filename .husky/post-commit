#!/bin/sh
# .husky/post-commit

echo '🔒 Sanitizing .env file after successful commit...'

# .env dosyası var mı kontrol et
if [ ! -f .env ]; then
    echo '⚠️  .env file not found, skipping sanitization'
    exit 0
fi

# .env.example dosyası oluştur/güncelle
echo '📝 Creating/updating .env.example with sanitized values...'

# Farklı değişken türleri için özel örnek değerler
cat .env | while IFS='=' read -r key value; do
    # Boş satırları atla
    if [ -z "$key" ]; then
        echo ""
        continue
    fi
    
    # Yorum satırlarını koru
    if echo "$key" | grep -q '^#'; then
        echo "$key"
        continue
    fi
    
    # Değişken adına göre özel örnek değerler
    case "$key" in
        *API_KEY*|*SECRET*|*TOKEN*|*PASSWORD*)
            echo "${key}=---$(echo ${key} | tr '[:upper:]' '[:lower:]')---"
            ;;
        *URL*|*ENDPOINT*)
            echo "${key}=https://example.com/api"
            ;;
        *PORT*)
            echo "${key}=3000"
            ;;
        *DATABASE*|*DB*)
            echo "${key}=postgresql://user:password@localhost:5432/database"
            ;;
        *EMAIL*)
            echo "${key}=noreply@example.com"
            ;;
        *DOMAIN*|*HOST*)
            echo "${key}=localhost"
            ;;
        *DEBUG*|*LOG*|*VERBOSE*)
            echo "${key}=false"
            ;;
        *ENV*|*NODE_ENV*)
            echo "${key}=development"
            ;;
        *)
            echo "${key}=---example-value---"
            ;;
    esac
done > .env.example

echo '✅ .env.example created/updated with sanitized values'
echo '🎉 Environment file sanitization completed!'
